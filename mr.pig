inputfile = load 'hdfs:///pigdata/*.csv' USING PigStorage(',','-tagsource');
input_fil = foreach inputfile generate (chararray) $0 as Stock, (chararray) $1 as Date, (chararray) $7 as Adjclose;
input_file = FILTER input_fil BY (Date != 'Date');
Map1 = foreach input_file Generate CONCAT(SUBSTRING(Stock,0,INDEXOF(Stock,'.',0)),'+',SUBSTRING(Date,0,7)) as key1,CONCAT(SUBSTRING(Date,8,10),Adjclose) as val1;
A = GROUP Map1 BY key1;
C = FOREACH A GENERATE group, MAX(Map1.val1) as maxi, MIN(Map1.val1) as mini;
D = FOREACH C GENERATE group, (double) SUBSTRING(maxi,2,7) as maxim, (double) SUBSTRING(mini,2,7) as minim;
E = FOREACH D GENERATE group as red1, ((maxim - minim)/minim) as xi;
F = FOREACH E GENERATE SUBSTRING(red1,0,INDEXOF(red1,'+',0)) as sto, xi;
G = GROUP F by sto;
H = FOREACH G GENERATE group as sto, COUNT(F.$1) as ccx, SUM(F.xi)/COUNT(F.$1) as xbar;
X = JOIN F BY sto, H BY sto;
I = FOREACH X GENERATE $0 as stockname, ((xi - xbar) * (xi - xbar)) as difi;
J = GROUP I by stockname;
K = FOREACH J GENERATE group as stname, SQRT(SUM(I.difi)/(COUNT(I.stockname)-1)) as volatility;
L = FILTER K BY volatility > 0;
SORT = RANK L BY volatility ASC;
finaloutmin = FILTER SORT BY rank_L < 11;
SORT1 = RANK L BY volatility DESC;
finaloutmax = FILTER SORT1 BY rank_L < 11;
FINAL = UNION finaloutmin,finaloutmax;
store FINAL into 'hdfs:///pigdata/hw3_out';
